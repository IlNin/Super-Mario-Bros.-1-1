<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_mario_climb</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Inizializzazione variabili

animazione = true; // Animazione in cui Mario si cala per l'asta della bandiera
ruota = false; // Animazione in cui Mario si gira per saltare
conto = false; // Mario si prepara a saltare
salta = false; // Mario salta
velocitaY = 5;
velocitaX = 4;
timer = 0; // timer utilizzato per far stare Mario sulla bandiera prima di saltare
timer2 = 0; // timer prima che il gioco venga ravviato
altezzaSalto = 24;
gravita = 0.8;

// Mario_Climb assume la telecamera
view_visible[0] = false;
view_visible[1] = true;

// Avvia musica fine livello
audio_stop_sound(snd_overworld);
audio_stop_sound(snd_overworld_fast);
audio_play_sound(snd_stage_clear, 1, false);

// Blocca timer
global.bloccaTimer = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Animazione

// Mario si cala dall'asta
if (animazione = true) {
 if place_meeting(x, y+velocitaY, obj_block) { // Mario tocca il terreno
  while place_free(x, y+1) {
   y = y + 1; }
  animazione = false;
  ruota = true; }
 else { // Mario non tocca il terreno e continua a scendere
  y = y + velocitaY; } }

// Mario si gira dall'altro
else if (ruota = true) {
 image_xscale = -image_xscale; // Fa ruota Mario
 x = x+77; // Porta Mario all'altro lato dell'asta
 ruota = false;
 conto = true; }

// Mario si prepara a saltare
else if (conto = true) {
 timer = timer + 1;
 if (timer == 30) { // Mario è pronto
  conto = false;
  salta = true; } }

// Mario salta
else if (salta = true) {
 audio_play_sound(snd_mario_jump, 0, false);
 velocitaY = -altezzaSalto;
 image_xscale = -image_xscale; // Ruota nuovamente Mario per farlo saltare al lato giusto
 sprite_index = spr_mario_jump;
 salta = false; }

// Mario è in aria
else { 
 if (velocitaY &lt; 10) { 
  velocitaY = velocitaY + gravita; }
 
 if !place_free(x+velocitaX, y) { // Mario si sposta, che sia in aria o quando è già atterrato
  while place_free(x+sign(velocitaY), y) {
   x = x+sign(velocitaX); } }
 else {
  x = x + velocitaX; }
  
 if !place_free(x, y+velocitaY) { // Mario tocca terra
  sprite_index = spr_mario_walk;
  image_speed = 0.2;
  while place_free(x, y+sign(velocitaY)) {
   y = y+sign(velocitaY); } }
 else {
  y = y + velocitaY; } }
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Riavvio gioco

timer2 = timer2 + 1;
if (timer2 == 200) { // Fa apparire la scritta di ringraziamento
 instance_create(x, y, obj_thanks); }
if (timer2 == 400) { // Riporta il gioco al menù principale
 room_goto(rm_menu); }
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
